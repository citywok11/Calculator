@page "/calculatorpage"

<PageTitle>Calculator</PageTitle>

<h1>Calculator</h1>

<div class="form-group">
    <label for="modalcolour">Modal colour:</label>
    <select id="modalcolour" @bind="@selectedcolour" class="form-control">
        @foreach (var colour in colours)
        {
            <option value="@colour.Key">@colour.Value</option>
        }
    </select>
</div>

<div class="form-group">
    <label for="textStyle">Text style:</label>
    <select id="textStyle" @bind="@selectedTextStyle" class="form-control">
        @foreach (var style in textStyles)
        {
            <option value="@style.Key">@style.Value</option>
        }
    </select>
</div>


<hr />

<button class="btn btn-primary" @onclick="@openCalculator">Open Calculator</button>

@code {

    [CascadingParameter] public IModalService Modal { get; set; } = default!;

    private string selectedcolour = "";
    private string selectedTextStyle = "";

    protected override void OnInitialized()
    {
        selectedcolour = colours.Keys.First();
        selectedTextStyle = textStyles.Keys.First();
    }

    private Dictionary<string, string> colours = new Dictionary<string, string>
    {
        { "", "Plain" },
        { "bg-primary", "Blue" },
        { "bg-danger", "Red" },
        { "bg-warning", "Yellow" },
    };

    private Dictionary<string, string> textStyles = new Dictionary<string, string>
    {
        { "style-formal", "Plain" },
        { "style-groovy", "Groovy" },
        { "style-loud", "Bold" },
    };


    private void openCalculator()
    {
        var options = new ModalOptions
            {
                UseCustomLayout = true
            };

        var parameters = new ModalParameters()
            .Add(nameof(CalculatorComponent.Colour), selectedcolour)
            .Add(nameof(CalculatorComponent.Style), selectedTextStyle);


        Modal.Show<CalculatorComponent>("Calculator", parameters, options);
    }

}